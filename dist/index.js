
/**
@module joukou-conductor/index
@author Fabian Cook <fabian.cook@joukou.com>
@copyright (c) 2009-2014 Joukou Ltd. All rights reserved.
 */
var ConductorRabbitMQClient, isRunning, joukouETCDConnectionString, joukouNode, logger, moment, prettified, start, startImmediately, url, vip;

joukouETCDConnectionString = process.env["JOUKOU_ETCD_CONNECTION_STRING"];

joukouNode = process.env["JOUKOU_NODE"];

vip = require('vip');

ConductorRabbitMQClient = require('joukou-conductor-rabbitmq').ConductorRabbitMQClient;

url = require('util');

logger = require('logger');

moment = require('moment');

prettified = require('prettified').errors;

if (!joukouETCDConnectionString) {
  joukouETCDConnectionString = "127.0.0.1:4001,127.0.0.1:4002";
  process.env["JOUKOU_ETCD_CONNECTION_STRING"] = joukouETCDConnectionString;
}

if (!joukouNode) {
  joukouNode = "JoukouNode";
  process.env["JOUKOU_NODE"] = joukouNode;
}

process.on("uncaughtException", function(err) {
  console.log("" + (moment().format()) + ":");
  return prettified.print(err);
});

process.on("exit", function() {
  return console.log("Process exiting " + (moment().format()));
});

start = function() {
  var service, vipcontroller;
  vipcontroller = vip('127.0.0.1:4001,127.0.0.1:4002');
  service = vipcontroller({
    id: joukouNode,
    path: "/joukou-conductor",
    value: "joukou-conductor-vip_" + joukouNode,
    ttl: 5
  }, function() {});
  service.on("select", function(id, value) {
    return startImmediately();
  });
  return service.start();
};

isRunning = false;

startImmediately = function() {
  if (isRunning) {
    return;
  }
  isRunning = true;
  return ConductorRabbitMQClient.listen();
};

if (require.main === module) {
  console.log("Process starting " + (moment().format()));
  start();
}

module.exports = {
  start: start,
  startImmediately: startImmediately
};

//# sourceMappingURL=data:application/json;base64,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USxDQUFDLE1BQVQsQ0FBQSxDQUFELENBQS9CLENBQUEsQ0FBQTtBQUFBLEVBQ0EsS0FBQSxDQUFBLENBREEsQ0FERjtDQXhEQTs7QUFBQSxNQTRETSxDQUFDLE9BQVAsR0FDRTtBQUFBLEVBQUEsS0FBQSxFQUFPLEtBQVA7QUFBQSxFQUNBLGdCQUFBLEVBQWtCLGdCQURsQjtDQTdERixDQUFBIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiIyMjKlxuQG1vZHVsZSBqb3Vrb3UtY29uZHVjdG9yL2luZGV4XG5AYXV0aG9yIEZhYmlhbiBDb29rIDxmYWJpYW4uY29va0Bqb3Vrb3UuY29tPlxuQGNvcHlyaWdodCAoYykgMjAwOS0yMDE0IEpvdWtvdSBMdGQuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4jIyNcblxuam91a291RVRDRENvbm5lY3Rpb25TdHJpbmcgID0gcHJvY2Vzcy5lbnZbXCJKT1VLT1VfRVRDRF9DT05ORUNUSU9OX1NUUklOR1wiXVxuam91a291Tm9kZSAgICAgICAgICAgICAgICAgID0gcHJvY2Vzcy5lbnZbXCJKT1VLT1VfTk9ERVwiXVxuXG52aXAgICAgICAgICAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCAndmlwJyApXG57IENvbmR1Y3RvclJhYmJpdE1RQ2xpZW50IH0gPSByZXF1aXJlKCdqb3Vrb3UtY29uZHVjdG9yLXJhYmJpdG1xJylcbnVybCAgICAgICAgICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJ3V0aWwnKVxubG9nZ2VyICAgICAgICAgICAgICAgICAgICAgID0gcmVxdWlyZSgnbG9nZ2VyJylcbm1vbWVudCAgICAgICAgICAgICAgICAgICAgICA9IHJlcXVpcmUoJ21vbWVudCcpXG5wcmV0dGlmaWVkICAgICAgICAgICAgICAgICAgPSByZXF1aXJlKCdwcmV0dGlmaWVkJykuZXJyb3JzXG5cbmlmIG5vdCBqb3Vrb3VFVENEQ29ubmVjdGlvblN0cmluZ1xuICBqb3Vrb3VFVENEQ29ubmVjdGlvblN0cmluZyA9IFwiMTI3LjAuMC4xOjQwMDEsMTI3LjAuMC4xOjQwMDJcIlxuICBwcm9jZXNzLmVudltcIkpPVUtPVV9FVENEX0NPTk5FQ1RJT05fU1RSSU5HXCJdID0gam91a291RVRDRENvbm5lY3Rpb25TdHJpbmdcblxuaWYgbm90IGpvdWtvdU5vZGVcbiAgam91a291Tm9kZSA9IFwiSm91a291Tm9kZVwiXG4gIHByb2Nlc3MuZW52W1wiSk9VS09VX05PREVcIl0gPSBqb3Vrb3VOb2RlXG5cbnByb2Nlc3Mub24oXCJ1bmNhdWdodEV4Y2VwdGlvblwiLCAoZXJyKSAtPlxuICBjb25zb2xlLmxvZyhcIiN7bW9tZW50KCkuZm9ybWF0KCl9OlwiKVxuICBwcmV0dGlmaWVkLnByaW50KGVycilcbilcbnByb2Nlc3Mub24oXCJleGl0XCIsIC0+XG4gIGNvbnNvbGUubG9nKFwiUHJvY2VzcyBleGl0aW5nICN7bW9tZW50KCkuZm9ybWF0KCl9XCIpXG4pXG5cbnN0YXJ0ID0gLT5cbiAgdmlwY29udHJvbGxlciA9IHZpcCgnMTI3LjAuMC4xOjQwMDEsMTI3LjAuMC4xOjQwMDInKVxuICBzZXJ2aWNlID0gdmlwY29udHJvbGxlcihcbiAgICBpZDogam91a291Tm9kZVxuICAgIHBhdGg6IFwiL2pvdWtvdS1jb25kdWN0b3JcIlxuICAgIHZhbHVlOiBcImpvdWtvdS1jb25kdWN0b3ItdmlwXyN7am91a291Tm9kZX1cIlxuICAgIHR0bDogNVxuICAsIC0+XG5cbiAgKVxuICBzZXJ2aWNlLm9uKFwic2VsZWN0XCIsIChpZCwgdmFsdWUpIC0+XG4gICAgc3RhcnRJbW1lZGlhdGVseSgpXG4gIClcbiAgc2VydmljZS5zdGFydCgpXG5cbmlzUnVubmluZyA9IG5vXG5cbnN0YXJ0SW1tZWRpYXRlbHkgPSAtPlxuICBpZiBpc1J1bm5pbmdcbiAgICAjIFdlIGFyZSBhbHJlYWR5IGxpc3RlbmluZ1xuICAgIHJldHVyblxuICBpc1J1bm5pbmcgPSB5ZXNcbiAgQ29uZHVjdG9yUmFiYml0TVFDbGllbnQubGlzdGVuKClcblxuaWYgcmVxdWlyZS5tYWluIGlzIG1vZHVsZVxuICBjb25zb2xlLmxvZyhcIlByb2Nlc3Mgc3RhcnRpbmcgI3ttb21lbnQoKS5mb3JtYXQoKX1cIilcbiAgc3RhcnQoKVxuXG5tb2R1bGUuZXhwb3J0cyA9XG4gIHN0YXJ0OiBzdGFydFxuICBzdGFydEltbWVkaWF0ZWx5OiBzdGFydEltbWVkaWF0ZWx5XG5cbiJdfQ==