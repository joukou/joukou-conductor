var Common, SystemDService,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Common = require("./unit-common");

SystemDService = (function(_super) {
  __extends(SystemDService, _super);

  function SystemDService() {
    SystemDService.__super__.constructor.call(this, "Service");
  }

  SystemDService.prototype.addEnvironment = function(name, value) {
    this.assertString(name, "name");
    this.assertString(value, "value");
    return this.addPair("Environment", "" + name + "=" + value);
  };

  SystemDService.prototype.addType = function(value) {
    return this.addPair("Type", value);
  };

  SystemDService.prototype.addExecStart = function(value) {
    return this.addPair("ExecStart", value);
  };

  SystemDService.prototype.addExecStartPre = function(value) {
    return this.addPair("ExecStartPre", value);
  };

  SystemDService.prototype.addExecStartPost = function(value) {
    return this.addPair("ExecStartPost", value);
  };

  SystemDService.prototype.addExecReload = function(value) {
    return this.addPair("ExecReload", value);
  };

  SystemDService.prototype.addExecStop = function(value) {
    return this.addPair("ExecStop", value);
  };

  SystemDService.prototype.addExecStopPost = function(value) {
    return this.addPair("ExecStopPost", value);
  };

  SystemDService.prototype.addRestartSec = function(value) {
    if (typeof value === "number") {
      value = "" + (parseInt(value)) + "s";
    }
    return this.addPair("RestartSec", value);
  };

  SystemDService.prototype.addTimeoutStartSec = function(value) {
    if (typeof value === "number") {
      value = "" + (parseInt(value)) + "s";
    }
    return this.addPair("TimeoutStartSec", value);
  };

  SystemDService.prototype.addTimeoutStopSec = function(value) {
    if (typeof value === "number") {
      value = "" + (parseInt(value)) + "s";
    }
    return this.addPair("TimeoutStopSec", value);
  };

  SystemDService.prototype.addTimeoutSec = function(value) {
    if (typeof value === "number") {
      value = "" + (parseInt(value)) + "s";
    }
    return this.addPair("TimeoutSec", value);
  };

  SystemDService.prototype.addRestart = function(value) {
    return this.addPair("Restart", value);
  };

  SystemDService.prototype.addNotifyAccess = function(value) {
    return this.addPair("NotifyAccess", value);
  };

  SystemDService.prototype.addEnvironmentFile = function(value) {
    return this.addPair("EnvironmentFile", value);
  };

  SystemDService.prototype.addUser = function(value) {
    return this.addPair("User", value);
  };

  SystemDService.prototype.addLimitNoFile = function(value) {
    if (typeof value === "number") {
      value = "" + (parseInt(value));
    }
    return this.addPair("LimitNOFILE", value);
  };

  return SystemDService;

})(Common);

module.exports = SystemDService;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN5c3RlbWQvc2VydmljZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxzQkFBQTtFQUFBO2lTQUFBOztBQUFBLE1BQUEsR0FBUyxPQUFBLENBQVEsZUFBUixDQUFULENBQUE7O0FBQUE7QUFLRSxtQ0FBQSxDQUFBOztBQUFhLEVBQUEsd0JBQUEsR0FBQTtBQUNYLElBQUEsZ0RBQU0sU0FBTixDQUFBLENBRFc7RUFBQSxDQUFiOztBQUFBLDJCQUdBLGNBQUEsR0FBZ0IsU0FBQyxJQUFELEVBQU8sS0FBUCxHQUFBO0FBQ2QsSUFBQSxJQUFDLENBQUEsWUFBRCxDQUFjLElBQWQsRUFBb0IsTUFBcEIsQ0FBQSxDQUFBO0FBQUEsSUFDQSxJQUFDLENBQUEsWUFBRCxDQUFjLEtBQWQsRUFBcUIsT0FBckIsQ0FEQSxDQUFBO1dBRUEsSUFBQyxDQUFBLE9BQUQsQ0FBUyxhQUFULEVBQXdCLEVBQUEsR0FBRyxJQUFILEdBQVEsR0FBUixHQUFXLEtBQW5DLEVBSGM7RUFBQSxDQUhoQixDQUFBOztBQUFBLDJCQVNBLE9BQUEsR0FBUyxTQUFDLEtBQUQsR0FBQTtXQUNQLElBQUMsQ0FBQSxPQUFELENBQVMsTUFBVCxFQUFpQixLQUFqQixFQURPO0VBQUEsQ0FUVCxDQUFBOztBQUFBLDJCQWFBLFlBQUEsR0FBYyxTQUFDLEtBQUQsR0FBQTtXQUNaLElBQUMsQ0FBQSxPQUFELENBQVMsV0FBVCxFQUFzQixLQUF0QixFQURZO0VBQUEsQ0FiZCxDQUFBOztBQUFBLDJCQWlCQSxlQUFBLEdBQWlCLFNBQUMsS0FBRCxHQUFBO1dBQ2YsSUFBQyxDQUFBLE9BQUQsQ0FBUyxjQUFULEVBQXlCLEtBQXpCLEVBRGU7RUFBQSxDQWpCakIsQ0FBQTs7QUFBQSwyQkFxQkEsZ0JBQUEsR0FBa0IsU0FBQyxLQUFELEdBQUE7V0FDaEIsSUFBQyxDQUFBLE9BQUQsQ0FBUyxlQUFULEVBQTBCLEtBQTFCLEVBRGdCO0VBQUEsQ0FyQmxCLENBQUE7O0FBQUEsMkJBeUJB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QXdCLEtBQXhCLEVBSGM7RUFBQSxDQTdFaEIsQ0FBQTs7d0JBQUE7O0dBRDJCLE9BSjdCLENBQUE7O0FBQUEsTUF1Rk0sQ0FBQyxPQUFQLEdBQWlCLGNBdkZqQixDQUFBIiwiZmlsZSI6InN5c3RlbWQvc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbIkNvbW1vbiA9IHJlcXVpcmUoXCIuL3VuaXQtY29tbW9uXCIpXG5cbiMgUGxlYXNlIHNlZSBvaW50ZXIuZGUvcHVibGljL3N5c3RlbWQtbWFuL3N5c3RlbWQuc2VydmljZS5odG1sXG4jIGZvciBhbnkgYWRkaXRpb25hbCBvcHRpb25zXG5jbGFzcyBTeXN0ZW1EU2VydmljZSBleHRlbmRzIENvbW1vblxuICBjb25zdHJ1Y3RvcjogLT5cbiAgICBzdXBlcihcIlNlcnZpY2VcIilcblxuICBhZGRFbnZpcm9ubWVudDogKG5hbWUsIHZhbHVlKSAtPlxuICAgIEBhc3NlcnRTdHJpbmcobmFtZSwgXCJuYW1lXCIpXG4gICAgQGFzc2VydFN0cmluZyh2YWx1ZSwgXCJ2YWx1ZVwiKVxuICAgIEBhZGRQYWlyKFwiRW52aXJvbm1lbnRcIiwgXCIje25hbWV9PSN7dmFsdWV9XCIpXG5cbiAgIyBodHRwOi8vMHBvaW50ZXIuZGUvcHVibGljL3N5c3RlbWQtbWFuL3N5c3RlbWQuc2VydmljZS5odG1sI1R5cGU9XG4gIGFkZFR5cGU6ICh2YWx1ZSkgLT5cbiAgICBAYWRkUGFpcihcIlR5cGVcIiwgdmFsdWUpXG5cbiAgIyBodHRwOi8vMHBvaW50ZXIuZGUvcHVibGljL3N5c3RlbWQtbWFuL3N5c3RlbWQuc2VydmljZS5odG1sI0V4ZWNTdGFydD1cbiAgYWRkRXhlY1N0YXJ0OiAodmFsdWUpIC0+XG4gICAgQGFkZFBhaXIoXCJFeGVjU3RhcnRcIiwgdmFsdWUpXG5cbiAgIyBodHRwOi8vMHBvaW50ZXIuZGUvcHVibGljL3N5c3RlbWQtbWFuL3N5c3RlbWQuc2VydmljZS5odG1sI0V4ZWNTdGFydFByZT1cbiAgYWRkRXhlY1N0YXJ0UHJlOiAodmFsdWUpIC0+XG4gICAgQGFkZFBhaXIoXCJFeGVjU3RhcnRQcmVcIiwgdmFsdWUpXG5cbiAgIyBodHRwOi8vMHBvaW50ZXIuZGUvcHVibGljL3N5c3RlbWQtbWFuL3N5c3RlbWQuc2VydmljZS5odG1sI0V4ZWNTdGFydFByZT1cbiAgYWRkRXhlY1N0YXJ0UG9zdDogKHZhbHVlKSAtPlxuICAgIEBhZGRQYWlyKFwiRXhlY1N0YXJ0UG9zdFwiLCB2YWx1ZSlcblxuICAjIGh0dHA6Ly8wcG9pbnRlci5kZS9wdWJsaWMvc3lzdGVtZC1tYW4vc3lzdGVtZC5zZXJ2aWNlLmh0bWwjRXhlY1JlbG9hZD1cbiAgYWRkRXhlY1JlbG9hZDogKHZhbHVlKSAtPlxuICAgIEBhZGRQYWlyKFwiRXhlY1JlbG9hZFwiLCB2YWx1ZSlcblxuICAjIGh0dHA6Ly8wcG9pbnRlci5kZS9wdWJsaWMvc3lzdGVtZC1tYW4vc3lzdGVtZC5zZXJ2aWNlLmh0bWwjRXhlY1N0b3A9XG4gIGFkZEV4ZWNTdG9wOiAodmFsdWUpIC0+XG4gICAgQGFkZFBhaXIoXCJFeGVjU3RvcFwiLCB2YWx1ZSlcblxuICAjIGh0dHA6Ly8wcG9pbnRlci5kZS9wdWJsaWMvc3lzdGVtZC1tYW4vc3lzdGVtZC5zZXJ2aWNlLmh0bWwjRXhlY1N0b3BQb3N0PVxuICBhZGRFeGVjU3RvcFBvc3Q6ICh2YWx1ZSkgLT5cbiAgICBAYWRkUGFpcihcIkV4ZWNTdG9wUG9zdFwiLCB2YWx1ZSlcblxuICAjIGh0dHA6Ly8wcG9pbnRlci5kZS9wdWJsaWMvc3lzdGVtZC1tYW4vc3lzdGVtZC5zZXJ2aWNlLmh0bWwjUmVzdGFydFNlYz1cbiAgYWRkUmVzdGFydFNlYzogKHZhbHVlKSAtPlxuICAgIGlmIHR5cGVvZiB2YWx1ZSBpcyBcIm51bWJlclwiXG4gICAgICB2YWx1ZSA9IFwiI3twYXJzZUludCh2YWx1ZSl9c1wiXG4gICAgQGFkZFBhaXIoXCJSZXN0YXJ0U2VjXCIsIHZhbHVlKVxuXG4gICMgaHR0cDovLzBwb2ludGVyLmRlL3B1YmxpYy9zeXN0ZW1kLW1hbi9zeXN0ZW1kLnNlcnZpY2UuaHRtbCNUaW1lb3V0U3RhcnRTZWM9XG4gIGFkZFRpbWVvdXRTdGFydFNlYzogKHZhbHVlKSAtPlxuICAgIGlmIHR5cGVvZiB2YWx1ZSBpcyBcIm51bWJlclwiXG4gICAgICB2YWx1ZSA9IFwiI3twYXJzZUludCh2YWx1ZSl9c1wiXG4gICAgQGFkZFBhaXIoXCJUaW1lb3V0U3RhcnRTZWNcIiwgdmFsdWUpXG5cbiAgIyBodHRwOi8vMHBvaW50ZXIuZGUvcHVibGljL3N5c3RlbWQtbWFuL3N5c3RlbWQuc2VydmljZS5odG1sI1RpbWVvdXRTdG9wU2VjPVxuICBhZGRUaW1lb3V0U3RvcFNlYzogKHZhbHVlKSAtPlxuICAgIGlmIHR5cGVvZiB2YWx1ZSBpcyBcIm51bWJlclwiXG4gICAgICB2YWx1ZSA9IFwiI3twYXJzZUludCh2YWx1ZSl9c1wiXG4gICAgQGFkZFBhaXIoXCJUaW1lb3V0U3RvcFNlY1wiLCB2YWx1ZSlcblxuICAjIGh0dHA6Ly8wcG9pbnRlci5kZS9wdWJsaWMvc3lzdGVtZC1tYW4vc3lzdGVtZC5zZXJ2aWNlLmh0bWwjVGltZW91dFNlYz1cbiAgYWRkVGltZW91dFNlYzogKHZhbHVlKSAtPlxuICAgIGlmIHR5cGVvZiB2YWx1ZSBpcyBcIm51bWJlclwiXG4gICAgICB2YWx1ZSA9IFwiI3twYXJzZUludCh2YWx1ZSl9c1wiXG4gICAgQGFkZFBhaXIoXCJUaW1lb3V0U2VjXCIsIHZhbHVlKVxuXG4gICMgaHR0cDovLzBwb2ludGVyLmRlL3B1YmxpYy9zeXN0ZW1kLW1hbi9zeXN0ZW1kLnNlcnZpY2UuaHRtbCNSZXN0YXJ0PVxuICBhZGRSZXN0YXJ0OiAodmFsdWUpIC0+XG4gICAgQGFkZFBhaXIoXCJSZXN0YXJ0XCIsIHZhbHVlKVxuXG4gICMgaHR0cDovLzBwb2ludGVyLmRlL3B1YmxpYy9zeXN0ZW1kLW1hbi9zeXN0ZW1kLnNlcnZpY2UuaHRtbCNOb3RpZnlBY2Nlc3M9XG4gIGFkZE5vdGlmeUFjY2VzczogKHZhbHVlKSAtPlxuICAgIEBhZGRQYWlyKFwiTm90aWZ5QWNjZXNzXCIsIHZhbHVlKVxuXG4gIGFkZEVudmlyb25tZW50RmlsZTogKHZhbHVlKSAtPlxuICAgIEBhZGRQYWlyKFwiRW52aXJvbm1lbnRGaWxlXCIsIHZhbHVlKVxuXG4gIGFkZFVzZXI6ICh2YWx1ZSkgLT5cbiAgICBAYWRkUGFpcihcIlVzZXJcIiwgdmFsdWUpXG5cblxuXG5cbiAgYWRkTGltaXROb0ZpbGU6ICh2YWx1ZSkgLT5cbiAgICBpZiB0eXBlb2YgdmFsdWUgaXMgXCJudW1iZXJcIlxuICAgICAgdmFsdWUgPSBcIiN7cGFyc2VJbnQodmFsdWUpfVwiXG4gICAgQGFkZFBhaXIoXCJMaW1pdE5PRklMRVwiLCB2YWx1ZSlcblxubW9kdWxlLmV4cG9ydHMgPSBTeXN0ZW1EU2VydmljZSJdfQ==